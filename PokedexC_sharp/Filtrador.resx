<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAgBAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACbink9oJB9p6KPftJvZqXqU1HB+VNR
        wflTUcH5U1HB+VNRwflTUcH5U1HB+VNRwflRUML1TEzG50hIydtHR8raR0fK2kdHytpHR8raSEjK2UND
        x18AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACfj4AQopB9t6OUgfXJvK792c/D/315
        x/9hYdr/e3vq/3t76v97e+r/e3vq/3t76v97e+r/e3vq/3t76v97e+r/e3vq/3t76v97e+r/e3vq/3t7
        6v9ZWdP+bmak4KCPfcSgj33EoI99xJ+PfsCdjHqKmYp1IwAAAAAAAAAAgICABJ+Pfcq1qJf47+fd//Lr
        4f/y6+H/hYPS/2tr4f+Pj/f/j4/3/5KP2/+cj6D/nZCf/52Qn/+dkJ//nZCf/52Qn/+dkJ//nZCf/52Q
        n/+cj6D/ko/b/2Ji2P+Ri8L/1cu+/9XLvv/Vy77/08i7/7uvnvidjXn6no16XAAAAACdjXllqZmH9fDo
        3//y6+H/1c3D/5uRh/9jWnT/WVF6/2dfg/9nX4P/eW1//6eVgv/Xw6T/18Ok/9fDpP/Xw6T/18Ok/9fD
        pP/Xw6T/18Ok/6mXhf+Tjc3/Y2PZ/6Cc1f/y6+H/7ubc/8vAsv/Dt6j/4djM/97Vyf+ejXr6nYt5OaGR
        f8/Uybz/8uvh/8nBtv9URjz/opaN/46BdP9wX0//cF9P/3BfT/9/bV3/r5yF///owv//6ML//+jC///o
        wv//6ML//+jC///owv//6ML/sJ6O/5ONzf9jY9n/oJzV/+/n3P+omYj/uryl/8HMs/+jlYH/2M7C/8q8
        rv2hkH68qq6U+uff1P/y6+H/e29k/6OXjf/r6OT/29TO/6eWh/+PeWb/j3lm/5N/bP+wnYb//+jC///o
        wv//6ML//+jC///owv//6ML//+jC///owv+wno7/k43N/2Nj2f+gnNX/1Mm8/7Sxm/+94Lr/veC6/8XX
        uv+xo5L/59/T/5+NevayxaX95uDU//Lr4f93bGH/s6ig//Du6//k39v/rp6R/495Zv+PeWb/k39s/7Cd
        hv//6ML//+jC///owv//6ML//+jC///owv//6ML//+jC/7Cejv+Tjc3/Y2PZ/6Cc1f/Sx7n/t7eg/73g
        uv+94Lr/xdq8/7CgkP/o39X/no1796GRftnYzsL/8uvh/7uzqf9WST7/s6mg/6CShf9+aln/fmpZ/35q
        Wf+IdWP/r52F///owv//6ML//+jC///owv//6ML//+jC///owv//6ML/sJ6O/5ONzf9jY9n/oJzV/+vk
        2P+kk4H/wMqx/8TWuv+onYn/0ca5/8/Etv+gkH7Mnox7drGhkPTy6+D/8uvh/8K6sP9/c2n/WU1R/1VJ
        U/9bT1f/W09X/3FjYv+pl4L/5c+u/+XPrv/lz67/5c+u/+XPrv/lz67/5c+u/+XPrv+rmYj/k43N/2Nj
        2f+gnNX/8uvh/+jf1P/As6T/uKqa/9bMwP/m3tL/oY99+ZuLd0+qjnEJn4583sGzpPvx6uD/8uvh//Lr
        4f+Fg9L/a2vh/4+P9/+Pj/f/k47V/56Qjv+fkY7/n5GO/5+Rjv+fkY7/n5GO/5+Rjv+fkY7/n5GO/56Q
        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
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAARkbIoWtr
        4f+Pj/f/j4/3/5KP2/+cj6D/nZCf/52Qn/+dkJ//nZCf/52Qn/+dkJ//nZCf/52Qn/+cj6D/ko/b/19f
        2PlCQsd3AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AABGRsihYWHa/3t76v97e+r/e3vq/3t76v97e+r/e3vq/3t76v97e+r/e3vq/3t76v97e+r/e3vq/3t7
        6v97e+r/WVnU+kJCx3cAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAENDyH1HR8raR0fK2kdHytpHR8raR0fK2kdHytpHR8raR0fK2kdHytpHR8raR0fK2kdH
        ytpHR8raR0fK2kdHytpISMrZQ0PHXwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA////////////////8AAB/8AAAAeAAAADgAAAAQAAAAAAAAAAAAAAAAAA
        AACAAAABgAAAAcAAAAfwAAH//gAD//4AA//8AAH//AAB//wAAf/8AAH//AAB//wAAf/8AAH//AAB//wA
        Af/8AAH//AAB//4AAf////////////////8=
</value>
  </data>
</root>